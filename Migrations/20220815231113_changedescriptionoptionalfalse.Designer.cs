// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proyectoef;

#nullable disable

namespace proyectoef.Migrations
{
    [DbContext(typeof(tareasContext))]
    [Migration("20220815231113_changedescriptionoptionalfalse")]
    partial class changedescriptionoptionalfalse
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("proyectoef.models.categoria", b =>
                {
                    b.Property<Guid>("categoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("peso")
                        .HasColumnType("int");

                    b.HasKey("categoriaId");

                    b.ToTable("categoria", (string)null);

                    b.HasData(
                        new
                        {
                            categoriaId = new Guid("b26d5280-5460-47bf-9f5b-ed2eebc69a82"),
                            descripcion = "Tareas pendientes de realizar",
                            nombre = "Actividades pendientes",
                            peso = 1
                        },
                        new
                        {
                            categoriaId = new Guid("b26d5280-5460-47bf-9f5b-ed2eebc69a83"),
                            descripcion = "Tareas realizadas",
                            nombre = "Actividades realizadas",
                            peso = 2
                        },
                        new
                        {
                            categoriaId = new Guid("b26d5280-5460-47bf-9f5b-ed2eebc69a84"),
                            descripcion = "Tareas en progreso",
                            nombre = "Actividades en progreso",
                            peso = 3
                        },
                        new
                        {
                            categoriaId = new Guid("b26d5280-5460-47bf-9f5b-ed2eebc69a85"),
                            descripcion = "Tareas canceladas",
                            nombre = "Actividades canceladas",
                            peso = 4
                        },
                        new
                        {
                            categoriaId = new Guid("b26d5280-5460-47bf-9f5b-ed2eebc69a86"),
                            descripcion = "Tareas finalizadas",
                            nombre = "Actividades finalizadas",
                            peso = 5
                        });
                });

            modelBuilder.Entity("proyectoef.models.tarea", b =>
                {
                    b.Property<Guid>("tareaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("categoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("prioridadTarea")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("tareaId");

                    b.HasIndex("categoriaId");

                    b.ToTable("tarea", (string)null);

                    b.HasData(
                        new
                        {
                            tareaId = new Guid("b26d5280-5460-47bf-9f5b-ed2eebc69a87"),
                            categoriaId = new Guid("b26d5280-5460-47bf-9f5b-ed2eebc69a82"),
                            descripcion = "Pago de servicios publicos",
                            fechaActualizacion = new DateTime(2022, 8, 15, 18, 11, 13, 356, DateTimeKind.Local).AddTicks(2137),
                            fechaCreacion = new DateTime(2022, 8, 15, 18, 11, 13, 356, DateTimeKind.Local).AddTicks(2087),
                            prioridadTarea = 1,
                            titulo = "Pago de servicios publicos"
                        },
                        new
                        {
                            tareaId = new Guid("b26d5280-5460-47bf-9f5b-ed2eebc69a88"),
                            categoriaId = new Guid("b26d5280-5460-47bf-9f5b-ed2eebc69a82"),
                            descripcion = "Pago de servicios telefono",
                            fechaActualizacion = new DateTime(2022, 8, 15, 18, 11, 13, 356, DateTimeKind.Local).AddTicks(2148),
                            fechaCreacion = new DateTime(2022, 8, 15, 18, 11, 13, 356, DateTimeKind.Local).AddTicks(2146),
                            prioridadTarea = 1,
                            titulo = "Pago de servicios publicos"
                        },
                        new
                        {
                            tareaId = new Guid("b26d5280-5460-47bf-9f5b-ed2eebc69a89"),
                            categoriaId = new Guid("b26d5280-5460-47bf-9f5b-ed2eebc69a82"),
                            descripcion = "Pago de servicios cable",
                            fechaActualizacion = new DateTime(2022, 8, 15, 18, 11, 13, 356, DateTimeKind.Local).AddTicks(2155),
                            fechaCreacion = new DateTime(2022, 8, 15, 18, 11, 13, 356, DateTimeKind.Local).AddTicks(2153),
                            prioridadTarea = 1,
                            titulo = "Pago de servicios publicos"
                        },
                        new
                        {
                            tareaId = new Guid("b26d5280-5460-47bf-9f5b-ed2eebc69a90"),
                            categoriaId = new Guid("b26d5280-5460-47bf-9f5b-ed2eebc69a82"),
                            descripcion = "Pago de servicios netflix",
                            fechaActualizacion = new DateTime(2022, 8, 15, 18, 11, 13, 356, DateTimeKind.Local).AddTicks(2162),
                            fechaCreacion = new DateTime(2022, 8, 15, 18, 11, 13, 356, DateTimeKind.Local).AddTicks(2160),
                            prioridadTarea = 1,
                            titulo = "Pago de servicios publicos"
                        });
                });

            modelBuilder.Entity("proyectoef.models.tarea", b =>
                {
                    b.HasOne("proyectoef.models.categoria", "categoria")
                        .WithMany("tareas")
                        .HasForeignKey("categoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");
                });

            modelBuilder.Entity("proyectoef.models.categoria", b =>
                {
                    b.Navigation("tareas");
                });
#pragma warning restore 612, 618
        }
    }
}
